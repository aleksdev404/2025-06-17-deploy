import os
import httpx
import logging
import asyncio
from typing import List, Union

TOKEN       = os.getenv("TG_BOT_TOKEN")
STOCK_CHAT  = os.getenv("TG_CHAT_ID")                          # –æ–±—â–∏–π —á–∞—Ç –¥–ª—è –æ—Å—Ç–∞—Ç–∫–æ–≤ –∏ –ø–∏–Ω–≥–æ–≤
FILM_CHAT   = os.getenv("TG_FILM_CHAT_ID")      # —á–∞—Ç –¥–ª—è –ø–ª—ë–Ω–æ–∫
CLIENT_CHAT = os.getenv("TG_CLIENT_CHAT_ID")    # —á–∞—Ç –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –∑–∞–∫–∞–∑–æ–≤
log         = logging.getLogger("tg")


async def _post(text: str, chat_id: str):
    if not TOKEN:
        log.warning("TG_BOT_TOKEN not set; skipping send")
        return
    if not chat_id:
        log.warning("chat_id not set; skipping send")
        return

    url = f"https://api.telegram.org/bot{TOKEN}/sendMessage"
    data = {"chat_id": chat_id, "text": text}
    try:
        async with httpx.AsyncClient(timeout=10) as cli:
            await cli.post(url, data=data)
    except httpx.HTTPError as e:
        log.error("Telegram send failed: %s", e)


async def send(text: str):
    """
    –†–æ—É—Ç–∏–Ω–≥ –ø–æ –ø—Ä–µ—Ñ–∏–∫—Å—É:
    ‚úÖ ‚Äî –≤ FILM_CHAT
    üìû ‚Äî –≤ CLIENT_CHAT
    –∏–Ω–∞—á–µ ‚Äî –≤ STOCK_CHAT
    """
    if text.startswith("‚úÖ"):
        target = FILM_CHAT
    elif text.startswith("üìû"):
        target = CLIENT_CHAT
    else:
        target = STOCK_CHAT

    await _post(text, target)


async def info(msg: str):
    """‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ‚Äî –≤—Å–µ–≥–¥–∞ –≤ –æ–±—â–∏–π —á–∞—Ç."""
    await send(f"‚ÑπÔ∏è {msg}")


async def low_stock(name: str, q: Union[int, float], m: Union[int, float]):
    """‚ö†Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö (–≤ –æ–±—â–∏–π —á–∞—Ç)."""
    await send(f"‚ö†Ô∏è –û—Å—Ç–∞—Ç–æ–∫ ¬´{name}¬ª –¥–æ—Å—Ç–∏–≥ –º–∏–Ω–∏–º—É–º–∞ ({q} ‚â§ {m})")


async def film_hit(order_no: Union[str, int], channel: str, titles: List[str]):
    """‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≥–æ—Ç–æ–≤–æ–π –ø–ª—ë–Ω–∫–µ (–≤ —á–∞—Ç –ø–ª—ë–Ω–æ–∫)."""
    msg = f"‚úÖ –ì–æ—Ç–æ–≤–∞—è –ø–ª—ë–Ω–∫–∞ –≤ –∑–∞–∫–∞–∑–µ #{order_no} ({channel}): " + ", ".join(titles)
    await send(msg)


# –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ —à–ª—ë–º ¬´–ø–∏–Ω–≥¬ª –≤ –æ–±—â–∏–π —á–∞—Ç
asyncio.create_task(info("–±–æ—Ç –∑–∞–ø—É—â–µ–Ω ‚Äì –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≥–æ—Ç–æ–≤—ã"))
